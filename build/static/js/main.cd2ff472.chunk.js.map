{"version":3,"sources":["Audio/timeWave.mp3","Audio/theHorror.mp3","Audio/chime.mp3","Audio/glockenspiel.mp3","Audio/sheep.mp3","Audio/cowbell.mp3","Hooks/UseLocalStorageState.js","contexts/task.context.js","Hooks/UseToggle.js","contexts/session.context.js","contexts/gameState.context.js","sizes.js","ScoreBoard.js","Hooks/UseInterval.js","PlayButton.js","SFXPlayer.js","CircleTimer.js","Clock.js","SingleTaskIcon.js","SingleTaskItem.js","SingleTaskMenu.js","Hooks/UseInputState.js","Task.js","TodoList.js","BigText.js","AddTaskForm.js","AddTaskButton.js","MenuButton.js","WorkSpace.js","SideMenu.js","FAQ_Data.js","QuestionAnswer.js","Subject.js","FAQ.js","Audio.js","Timing.js","Options.js","App.js","serviceWorker.js","index.js","tomato.svg"],"names":["module","exports","UseLocalStorageState","key","defaultVal","useState","val","JSON","parse","window","localStorage","getItem","String","e","state","setState","useEffect","setItem","stringify","defaultTasks","task","pomTotal","pomsCompleted","id","TasksContext","createContext","TasksProvider","props","useLocalStorageState","tasks","setTasks","taskSelected","changeTaskSelected","Provider","value","addTask","taskName","poms","newTask","uuid","changeTaskName","name","revisedTaskList","map","deleteTask","filter","finishPom","children","UseToggle","initialState","SessionContext","SessionProvider","useToggle","isPom","toggleIsPom","isRunning","toggleIsRunning","drawerOpen","toggleDrawer","modalOpen","toggleModal","defaultGameState","points","crushPower","lastDate","Date","getDate","finishedPoms","highScore","GameStateContext","size","sm","md","lg","xl","useStyles","makeStyles","root","display","width","height","justifyContent","alignItems","fontFamily","fontSize","sizes","gridRow","gridColumn","pomFinished","text","fontWeight","opacity","margin","tomato","marginRight","ScoreBoard","classes","gameState","useContext","className","src","alt","useInterval","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","button","position","color","transition","transform","PlayButton","setTime","handlePress","preventDefault","addEventListener","removeEventListener","IconButton","onClick","disableRipple","sounds","chime","Howl","chimeSrc","timeWave","timeWaveSrc","theHorror","theHorrorSrc","glockenspiel","glockenspielSrc","cowbell","cowbellSrc","sheep","sheepSrc","playSFX","sfx","play","justifySelf","circleBackground","fill","stroke","circleProgress","strokeLinecap","strokeLinejoin","circleText","CircleTimer","innerText","sqSize","strokeWidth","radius","viewBox","dashArray","Math","PI","dashOffset","percentage","cx","cy","r","style","strokeDasharray","strokeDashoffset","x","y","dy","textAnchor","marginBottom","alignSelf","marginTop","Clock","options","DEFAULT_POM","pomTime","breakSeconds","breakTime","pomSeconds","finishPomPts","time","seconds","minutes","floor","strSeconds","strMinutes","currentTask","isTaskFinished","taskComplete","pomComplete","pomSound","breakSound","percentageFinished","displayText","length","marginLeft","paddingLeft","cursor","isSelected","SingleTaskIcon","stopPropagation","SingleTaskItem","isForm","handleSubmit","setTaskName","onSubmit","form","autoFocus","type","onChange","fullWidth","validators","errorMessages","ListItemText","primary","secondary","textAlign","flex","SingleTaskMenu","anchorEl","setAnchorEl","editTask","currentTarget","disabled","Menu","keepMounted","open","Boolean","onClose","MenuItem","initialVal","setValue","target","padding","backgroundColor","bottomDivider","Task","toggleForm","useInputState","index","ListItem","selected","taskText","taskMenu","Divider","flexDirection","innerList","mainList","maxWidth","addTaskPanel","TodoList","forceVisible","autoHide","List","component","aria-label","bigText","BigText","background","label","inputSection","input","borderRadius","title","buttonText","content","AddTaskForm","theme","useTheme","resetTaskName","setPoms","resetPoms","fullScreen","useMediaQuery","breakpoints","down","closeModal","ValidatorForm","addValidationRule","Number","isInteger","parseInt","Dialog","aria-labelledby","DialogTitle","DialogContent","htmlFor","autoComplete","helperText","DialogActions","Button","plusIconContainer","bottom","right","plusIcon","AddTaskButton","menuOpen","MenuButton","gridTemplateRows","gridTemplateColumns","WorkSpace","endStreak","persistStreak","currentDay","circleClock","panel","list","maxHeight","listArrow","listItem","textDecoration","mastHead","crush","fontStyle","textTransform","objectFit","menuClose","zIndex","top","SideMenu","history","useHistory","listItemSelected","setListItemSelected","pageRefs","handleKeyPress","page","push","handleClick","Drawer","role","onKeyDown","to","ListItemIcon","faqData","subjectTitle","subjectTopics","subjectQuestions","subjectAnswers","questionText","answerText","lineHeight","QuestionAnswer","React","setOpen","question","answer","Collapse","in","timeout","unmountOnExit","disablePadding","nested","topicTitle","topicSpace","paddingTop","Subject","topics","questions","answers","topic","i","bottomSection","tabBar","textTransfrom","topDivider","mainSection","menuButton","FAQ","tab","setTab","selectedData","Tabs","indicatorColor","textColor","newTab","Tab","submitButton","border","select","appearance","outline","option","Audio","saveOptions","setPomSound","setBreakSound","isNotSaved","variant","Timing","setPomTime","setBreakTime","tabSpace","App","initialOptions","setOptions","exact","path","Options","data","newOptions","location","hostname","match","ReactDOM","render","setGameState","pts","cp","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cd2ff472.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/timeWave.4ed338ec.mp3\";","module.exports = __webpack_public_path__ + \"static/media/theHorror.8b4d28ce.mp3\";","module.exports = __webpack_public_path__ + \"static/media/chime.8b1b8f09.mp3\";","module.exports = __webpack_public_path__ + \"static/media/glockenspiel.41175a88.mp3\";","module.exports = __webpack_public_path__ + \"static/media/sheep.cb9aadc1.mp3\";","module.exports = __webpack_public_path__ + \"static/media/cowbell.2eb83b0e.mp3\";","import {useState, useEffect} from 'react';\r\n\r\n\r\nfunction UseLocalStorageState(key, defaultVal){\r\n    //make piece of state, based off of value in localstorage\r\n\r\n    const [state, setState] = useState(() => {\r\n        let val ;\r\n        try{\r\n            val = JSON.parse(window.localStorage.getItem(key) || String(defaultVal))\r\n        }\r\n        catch (e){\r\n            val = defaultVal\r\n        }\r\n        return val\r\n    });\r\n    \r\n    //useEffect to update local Storage once state changes\r\n    useEffect(() => {\r\n        window.localStorage.setItem(key, JSON.stringify(state));\r\n    }, [state, key]);\r\n\r\n    return[state, setState];\r\n\r\n}\r\n\r\nexport default UseLocalStorageState;","import React, {createContext, useState} from 'react';\r\nimport useLocalStorageState from '../Hooks/UseLocalStorageState'\r\nimport uuid from 'uuid/v4'\r\n// import {useLocalStorageReducer} from '../Hooks/useLocalStorageReducer'\r\n// import taskReducer from '../reducers/task.reducer'\r\n\r\nconst defaultTasks = [\r\n    {task: \"Sample Task\", pomTotal: 1, pomsCompleted: 0, id: \"sadf3455-sdfg33\"},\r\n    {task: \"Another Sample Task\", pomTotal: 2, pomsCompleted: 1, id: \"hsdjlhf3445-343jjjl\"}\r\n]\r\nexport const TasksContext = createContext()\r\n// export const DispatchContext = createContext()\r\n\r\nexport const TasksProvider = props => {\r\n   const [tasks, setTasks] = useLocalStorageState('tasks', defaultTasks)\r\n   const [taskSelected, changeTaskSelected] = useState(null)\r\n   \r\nconst addTask = (taskName, poms) => {\r\n    const newTask = {\r\n           id: uuid(),\r\n           task: taskName,\r\n           pomTotal: poms,\r\n           pomsCompleted: 0,\r\n       }\r\n       setTasks([...tasks, newTask])\r\n   }\r\n\r\nconst changeTaskName = (name, id) => {\r\n    const revisedTaskList = tasks.map(task => (\r\n        task.id === id? {...task, task : name} : task\r\n    ));\r\n    setTasks(revisedTaskList)\r\n}\r\n\r\nconst deleteTask = (id) => {\r\n    const revisedTaskList = tasks.filter(task => task.id !== id);\r\n    setTasks(revisedTaskList);     \r\n}\r\n\r\nconst finishPom = (id) => {\r\n    setTasks(tasks.map(task => \r\n        task.id === id? {\r\n            id: task.id, \r\n            task: task.task,\r\n            pomTotal: task.pomTotal,\r\n            pomsCompleted: task.pomsCompleted + 1,\r\n        }\r\n        :\r\n        task\r\n        ))\r\n}\r\n\r\nreturn(\r\n    <TasksContext.Provider value={{tasks, addTask, changeTaskName, deleteTask, taskSelected, changeTaskSelected, finishPom}} >\r\n            {props.children}\r\n    </TasksContext.Provider>\r\n);\r\n}\r\n","import {useState} from 'react';\r\n\r\nfunction UseToggle(initialState) {\r\n   const [state, setState] = useState(initialState);\r\n   const toggle = () =>{\r\n       setState(!state)\r\n   };\r\n   return[state, toggle]\r\n   }\r\n\r\n   export default UseToggle","import React, {createContext} from 'react';\r\nimport useToggle from '../Hooks/UseToggle'\r\n\r\nexport const SessionContext = createContext()\r\n\r\nexport const SessionProvider = props => {\r\n   const [isPom, toggleIsPom] = useToggle(true);\r\n   const [isRunning, toggleIsRunning] = useToggle(false);\r\n   const [drawerOpen, toggleDrawer] = useToggle(false);\r\n   const [modalOpen, toggleModal] = useToggle(false);\r\n   \r\n\r\n\r\nreturn(\r\n    <SessionContext.Provider value={{\r\n        isPom, \r\n        toggleIsPom, \r\n        isRunning, \r\n        toggleIsRunning, \r\n        drawerOpen,\r\n        toggleDrawer,\r\n        modalOpen,\r\n        toggleModal\r\n        }} >\r\n            {props.children}\r\n    </SessionContext.Provider>\r\n);\r\n}\r\n","import React, {createContext} from 'react';\r\nimport UseLocalStorageState from '../Hooks/UseLocalStorageState';\r\n// import {useLocalStorageReducer} from '../Hooks/useLocalStorageReducer'\r\n// import taskReducer from '../reducers/task.reducer'\r\n\r\nconst currentDate = JSON.stringify(new Date().getDate())\r\nconst defaultGameState = \r\n            {\r\n            points: 0,\r\n            crushPower: 0,\r\n            lastDate: currentDate,\r\n            finishedPoms: 0,\r\n            highScore: 0,\r\n            }\r\n    \r\nexport const GameStateContext = createContext()\r\n// export const DispatchContext = createContext()\r\n\r\nexport const GameStateProvider = props => {\r\n\r\n//    const {tasks} = useContext(TasksContext) \r\n   const [gameState, setGameState] = UseLocalStorageState('gameState', defaultGameState)\r\n  \r\n   \r\nconst persistStreak = (currentDay) => {\r\n\r\n    setGameState({\r\n        points: 0,\r\n        crushPower: gameState.crushPower,\r\n        lastDate: currentDay,\r\n        finishedPoms: gameState.finishedPoms,\r\n        highScore: gameState.highScore\r\n    })\r\n}\r\nconst endStreak = (currentDay) => {\r\n  \r\n    \r\n    setGameState({\r\n        points: 0,\r\n        crushPower: 0,\r\n        lastDate: currentDay,\r\n        finishedPoms: 0,\r\n        highScore: gameState.highScore\r\n    })\r\n}\r\n\r\nconst finishPomPts = (pts, cp) => {\r\n\r\n\r\n        if (gameState.points + pts >= gameState.highScore){\r\n            setGameState({...gameState, \r\n                points: gameState.points + pts, \r\n                crushPower: gameState.crushPower + cp,\r\n                finishedPoms: gameState.finishedPoms + 1, \r\n                highScore: gameState.points + pts\r\n            })\r\n        }\r\n        else{\r\n            setGameState({...gameState, \r\n                points: gameState.points + pts, \r\n                crushPower: gameState.crushPower + cp,\r\n                finishedPoms: gameState.finishedPoms + 1, \r\n            })\r\n            \r\n        }\r\n    }\r\nreturn(\r\n    <GameStateContext.Provider value={{\r\n        gameState,  \r\n        finishPomPts, \r\n        persistStreak, \r\n        endStreak, \r\n        }} >\r\n            {props.children}\r\n    </GameStateContext.Provider>\r\n);\r\n}\r\n","export default {\r\n    up(size){\r\n        const sizes = {\r\n            sm: \"575.98px\",\r\n            md: \"767.98px\",\r\n            lg: \"1080.98px\",\r\n            xl: \"1280.98px\",\r\n        }\r\n        return `@media (min-width: ${sizes[size]})`\r\n    },\r\n    vertical(size){\r\n        const sizes = {\r\n            sm: \"600.98px\",\r\n            md: \"650.98px\",\r\n            lg: \"750.98px\",\r\n            xl: \"1100.98px\",\r\n        }\r\n        return `@media (min-height: ${sizes[size]})`\r\n    }\r\n}","import React, {useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core'\r\nimport tomato from './tomato.svg'\r\nimport sizes from './sizes'\r\nimport { GameStateContext } from './contexts/gameState.context';\r\n\r\n\r\nconst useStyles =  makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        width: '90%',\r\n        height: '4%',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'flex-end',\r\n        fontFamily: `'Press Start 2P'`,\r\n        fontSize: '.6rem',\r\n        [sizes.up(\"md\")]: {\r\n            width: '80%'\r\n        },\r\n        [sizes.up(\"lg\")]: {\r\n            width: '100%',\r\n            gridRow: '2',\r\n            gridColumn: '1/3',\r\n            display: 'flex',\r\n        },\r\n    },\r\n    pomFinished: {\r\n        display: 'flex',\r\n        alignItems: 'flex-end',\r\n    },\r\n    text: {\r\n        fontWeight: '400',\r\n        \r\n        opacity: '0.6',\r\n        margin: '0rem',\r\n        [sizes.up(\"sm\")]: {\r\n        fontSize: '1rem'\r\n           \r\n        },\r\n        [sizes.up(\"md\")]: {\r\n        fontSize: '1.3rem'\r\n           \r\n        }\r\n    },\r\n    tomato: {\r\n        marginRight: '6px',\r\n        height: '1.3rem',\r\n        \r\n        [sizes.up('lg')]: {\r\n            height: '2rem'\r\n        } \r\n    }\r\n})\r\n\r\n\r\n\r\nconst ScoreBoard = props => {\r\n\r\n    const classes =  useStyles(props)\r\n\r\n    const {gameState} = useContext(GameStateContext);\r\n    const {finishedPoms, points, crushPower} = gameState\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            <div className={classes.pomFinished}>\r\n                <img className={classes.tomato} src={tomato} alt='pizelized tomato'/>\r\n                <p className={classes.text}>{`x ${finishedPoms}`}</p>\r\n            </div>\r\n            <div>\r\n                <p className={classes.text}> {points} </p>\r\n            </div>\r\n            <div>\r\n                <p className={classes.text}>CP: {crushPower} </p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ScoreBoard;","import { useEffect, useRef } from 'react';\r\n\r\nfunction useInterval(callback, delay) {\r\n  const savedCallback = useRef();\r\n\r\n\r\n\r\n\r\n  // Remember the latest callback.\r\n  useEffect(() => {\r\n    savedCallback.current = callback;\r\n  }, [callback]);\r\n\r\n  // Set up the interval.\r\n  useEffect(() => {\r\n    function tick() {\r\n      savedCallback.current();\r\n    }\r\n    if (delay !== null) {\r\n      let id = setInterval(tick, delay);\r\n      return () => clearInterval(id);\r\n    }\r\n  }, [delay]);\r\n}\r\n\r\n\r\nexport default useInterval;\r\n\r\n// https://overreacted.io/making-setinterval-declarative-with-react-hooks/\r\n\r\n\r\n","import React, {useContext, useEffect} from 'react'\r\nimport {SessionContext} from './contexts/session.context';\r\nimport {TasksContext} from './contexts/task.context';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseCircleFilledIcon from '@material-ui/icons/PauseCircleFilled';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport sizes from './sizes';\r\n\r\n\r\nconst useStyles =  makeStyles({\r\n    button: {\r\n        position: 'absolute',\r\n        [sizes.up(\"lg\")]: {\r\n            position: 'relative'\r\n        },\r\n        '& svg': {\r\n            color: props => props.isRunning? '#24252c' \r\n            : '#f6f6f6',\r\n            opacity: '0.3',\r\n            fontSize: '3.5rem',\r\n            transition: 'ease-in-out .1s',\r\n            '&:hover' : {\r\n              transform: 'scale(1.1)'\r\n            },\r\n            [sizes.up(\"sm\")]: {\r\n                fontSize: '3.5rem',  \r\n            },\r\n            [sizes.up(\"md\")]: {\r\n                fontSize: '4.5rem',  \r\n            },\r\n            [sizes.up(\"lg\")]: {\r\n                fontSize: '7.7rem', \r\n            },\r\n            },\r\n        \r\n    }\r\n})\r\n\r\n\r\nconst PlayButton = (props) => {\r\n\r\n    const {isRunning, toggleIsRunning, isPom, modalOpen} = useContext(SessionContext);\r\n    const {taskSelected, changeTaskSelected} = useContext(TasksContext);\r\n    const {setTime} = props;\r\n\r\n    const classes =  useStyles(props);\r\n\r\n    const handleClick = e => {\r\n    \r\n        if(!isPom && isRunning){\r\n            setTime(0)\r\n       }\r\n       else if(taskSelected===null){\r\n           changeTaskSelected(0)\r\n       }\r\n       else{\r\n           toggleIsRunning()\r\n       }\r\n       \r\n    }\r\n\r\n\r\n    const handlePress = e => { \r\n        if (e.key === ' ' && !modalOpen){\r\n            e.preventDefault();\r\n            if(taskSelected !== null){\r\n                toggleIsRunning()\r\n            }\r\n            else{\r\n                changeTaskSelected(0) \r\n            }\r\n        }\r\n        else return\r\n    }\r\n \r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handlePress)\r\n        return () => {\r\n          window.removeEventListener('keydown', handlePress)\r\n        };\r\n      })\r\n\r\n    return(\r\n        <IconButton \r\n        className={classes.button} \r\n        onClick={handleClick}\r\n        disableRipple={true}\r\n        >\r\n            {isRunning && !isPom?\r\n            <SkipNextIcon/> \r\n            :\r\n            isRunning? \r\n            <PauseCircleFilledIcon /> \r\n            : \r\n            < PlayArrowIcon/>\r\n            }\r\n        </IconButton>\r\n    )\r\n}\r\n\r\nexport default PlayButton;","\r\nimport timeWaveSrc from './Audio/timeWave.mp3'\r\nimport theHorrorSrc from './Audio/theHorror.mp3'\r\nimport chimeSrc from './Audio/chime.mp3'\r\nimport glockenspielSrc from './Audio/glockenspiel.mp3'\r\nimport sheepSrc from './Audio/sheep.mp3'\r\nimport cowbellSrc from './Audio/cowbell.mp3'\r\nimport {Howl} from 'howler'\r\n\r\nconst chime = new Howl({\r\n    src:[chimeSrc]\r\n})\r\nconst timeWave = new Howl({\r\n    src:[timeWaveSrc]\r\n})\r\nconst theHorror = new Howl({\r\n    src:[theHorrorSrc]\r\n})\r\nconst glockenspiel = new Howl({\r\n    src:[glockenspielSrc]\r\n})\r\nconst cowbell = new Howl({\r\n    src:[cowbellSrc]\r\n})\r\nconst sheep = new Howl({\r\n    src:[sheepSrc]\r\n})\r\n\r\nconst sounds = {\r\nchime : chime, \r\ntimeWave : timeWave, \r\ntheHorror : theHorror, \r\nglockenspiel : glockenspiel, \r\ncowbell : cowbell, \r\nsheep: sheep\r\n}\r\n\r\nconst playSFX = sfx => {\r\n    sounds[sfx].play()\r\n}\r\n\r\nexport {playSFX}; ","import React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport sizes from './sizes'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      justifySelf: 'center',\r\n      \r\n      [sizes.up(\"sm\")]: {\r\n        width: '300px',\r\n        height: 'auto',\r\n      },\r\n      [sizes.up(\"md\")]: {\r\n        width: '340px',\r\n        height: 'auto',\r\n      },\r\n      [sizes.up(\"lg\")]: {\r\n        width: '400px',\r\n        height: 'auto',\r\n        gridRow: '3',\r\n        gridColumn: '1',\r\n        justifySelf: 'flex-end',\r\n        marginRight: '4rem',\r\n\r\n      },\r\n      [sizes.up(\"xl\")]: {\r\n        width: '410px',\r\n        [sizes.vertical('lg')]: {\r\n          width: '460px',\r\n        },\r\n        marginRight: '4rem'\r\n      }\r\n      \r\n    },\r\n    circleBackground: {\r\n        fill: 'none',\r\n        stroke: '#24252c'\r\n    },\r\n    circleProgress: {\r\n        stroke: props => props.color,\r\n        strokeLinecap: 'round',\r\n        strokeLinejoin: 'bevel',\r\n        fill: 'none'\r\n    },\r\n    circleText: {\r\n        fontWeight: '200',\r\n        fontSize: props => props.fontSize,\r\n        fill: props => props.color\r\n    }\r\n})\r\n\r\n\r\n\r\nconst CircleTimer = props => {\r\n\r\n      const {innerText, sqSize, strokeWidth, } = props;\r\n      const classes = useStyles(props)\r\n\r\n\r\n      // SVG centers the stroke width on the radius, subtract out so circle fits in square\r\n      const radius = (sqSize - strokeWidth) / 2;\r\n      // Enclose cicle in a circumscribing square\r\n      const viewBox = `0 0 ${sqSize} ${sqSize}`;\r\n      // Arc length at 100% coverage is the circle circumference\r\n      const dashArray = radius * Math.PI * 2;\r\n      // Scale 100% coverage overlay with the actual percent\r\n      const dashOffset = dashArray - dashArray * props.percentage / 100;\r\n  \r\n      return (\r\n        <svg\r\n            className={classes.root}\r\n            width={sqSize}\r\n            height={sqSize}\r\n            viewBox={viewBox}>\r\n            <circle\r\n              className={classes.circleBackground}\r\n              cx={sqSize / 2}\r\n              cy={sqSize / 2}\r\n              r={radius}\r\n              strokeWidth={`${strokeWidth}px`} />\r\n            <circle\r\n              className={classes.circleProgress}\r\n              cx={sqSize / 2}\r\n              cy={sqSize / 2}\r\n              r={radius}\r\n              strokeWidth={`${strokeWidth}px`}\r\n              transform={`rotate(-90 ${sqSize / 2} ${sqSize / 2})`}\r\n              style={{\r\n                strokeDasharray: dashArray,\r\n                strokeDashoffset: dashOffset\r\n              }} />\r\n            <text\r\n              className={classes.circleText}\r\n              x=\"50%\"\r\n              y=\"50%\"\r\n              dy=\".3em\"\r\n              textAnchor=\"middle\">\r\n                  {innerText}\r\n            </text>\r\n        </svg>\r\n      );\r\n    \r\n  }\r\n  \r\n\r\n  export default CircleTimer","import React, {useState, useContext} from 'react';\r\nimport useInterval from './Hooks/UseInterval';\r\nimport PlayButton from './PlayButton';\r\nimport {TasksContext} from './contexts/task.context'\r\nimport {GameStateContext} from './contexts/gameState.context'\r\nimport {SessionContext} from './contexts/session.context';\r\nimport {playSFX} from './SFXPlayer';\r\nimport CircleTimer from './CircleTimer';\r\nimport sizes from './sizes'\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginBottom: '1rem',\r\n    },\r\n    button: { \r\n        transform: \"translate(-2.4rem, -5.5rem)\",\r\n        [sizes.up('sm')]: {\r\n            transform: \"translate(-2.4rem, -6.5rem)\",\r\n        },\r\n        [sizes.up('md')]: {\r\n            transform: \"translate(-3rem, -7.5rem)\",\r\n        },\r\n        [sizes.up(\"lg\")]: {\r\n            gridRow: '4',\r\n            gridColumn: '1',\r\n            justifySelf: 'flex-end',\r\n            alignSelf: 'flex-start',\r\n            transform: \"translateX(-16.5rem)\",\r\n            [sizes.vertical(\"lg\")]: {\r\n            transform: \"translate(-16.5rem, -3.7rem)\",\r\n            }\r\n        },\r\n        [sizes.up('xl')]: {\r\n            [sizes.vertical('lg')]: {\r\n                marginTop: '-1.7rem',\r\n                transform: 'translate(-20.5rem)'\r\n            }\r\n        },\r\n}\r\n})\r\n\r\nconst Clock = (props) => {\r\n    const classes = useStyles(props)\r\n\r\n\r\n\r\n    const {\r\n        isPom,\r\n        toggleIsPom,\r\n        isRunning,\r\n        toggleIsRunning,\r\n    }\r\n    = useContext(SessionContext)\r\n    const {options} = props;\r\n    const DEFAULT_POM = options.pomTime;\r\n    const DEFAULT_BREAK = options.breakTime;\r\n    const breakSeconds = DEFAULT_BREAK * 60;\r\n    const pomSeconds = DEFAULT_POM * 60;\r\n\r\n    const {tasks, taskSelected, finishPom, deleteTask} = useContext(TasksContext)\r\n    const {finishPomPts, gameState} = useContext(GameStateContext)\r\n\r\n    const [time, setTime] = useState(isPom? pomSeconds : breakSeconds);\r\n\r\n    const seconds = time % 60;\r\n    const minutes = Math.floor(time / 60);\r\n    const strSeconds  = seconds< 10 ? `0${seconds}` : `${seconds}`\r\n    const strMinutes = minutes < 10 ? `0${minutes}` : `${minutes}`\r\n    \r\n    const toggleClock = () =>{\r\n        toggleIsRunning()\r\n    }\r\n\r\n    const pomComplete = (currentTask, taskComplete) => {\r\n        if(taskComplete){\r\n            finishPomPts(100 + gameState.crushPower, currentTask.pomTotal + 1)\r\n            deleteTask(currentTask.id)\r\n        }\r\n        else{\r\n            finishPomPts(100 + gameState.crushPower, 1)\r\n            finishPom(currentTask.id)\r\n        }\r\n\r\n    }\r\n\r\n    useInterval(() => {\r\n        setTime(time - 1);\r\n      }, isRunning? 1000: null);\r\n      \r\n      if (time <= 0){\r\n          toggleClock()\r\n          if(isPom){\r\n              const currentTask = tasks[taskSelected]\r\n              const isTaskFinished = currentTask.pomTotal === currentTask.pomsCompleted + 1\r\n\r\n              setTime(breakSeconds)\r\n              pomComplete(currentTask, isTaskFinished)\r\n              playSFX(options.pomSound)\r\n              toggleIsPom()\r\n            }  \r\n            else { \r\n                setTime(pomSeconds);\r\n                playSFX(options.breakSound)\r\n                toggleIsPom();\r\n            }\r\n        }    \r\n    \r\n    const percentageFinished =  100 - (isPom? time / pomSeconds * 100 : time / breakSeconds * 100)  \r\n    const displayText =  tasks.length > 0? `${strMinutes}:${strSeconds}` : '';\r\n    const color = isPom? '#9b161a' : '#57f73e' ;\r\n     \r\n    return(\r\n        <>\r\n        <CircleTimer \r\n            strokeWidth=\"5\"\r\n            sqSize='230'\r\n            percentage={percentageFinished}\r\n            innerText={displayText}\r\n            fontSize={'4.2rem'}\r\n            color={color}\r\n        />\r\n       \r\n        <span className={classes.button}>\r\n           {tasks.length > 0 && <PlayButton setTime={setTime}/>}\r\n        </span>\r\n        </>\r\n    \r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Clock;","import React from 'react'\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nimport PauseIcon from '@material-ui/icons/Pause';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport sizes from './sizes'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n\r\n    root: {\r\n        alignSelf: 'center',\r\n        marginLeft: '1rem',\r\n        paddingLeft: '0px',\r\n        cursor: 'pointer',\r\n        '& svg' : {\r\n\r\n            color: '#d1d1d0',\r\n            opacity: props => props.isSelected? '1' : '0',\r\n            transition: 'ease-in-out 250ms',\r\n            [sizes.up(\"lg\")] : {\r\n                fontSize: '2rem'\r\n            }\r\n        }, \r\n    },\r\n})\r\n\r\nconst SingleTaskIcon = (props) => {\r\n\r\n    const {isSelected, toggleIsRunning, isRunning} = props;\r\n    const classes = useStyles(props)\r\n\r\n    const handleClick = e => {\r\n        if(isSelected){\r\n        //This is deliberate. I want to propogate click if not selected. \r\n         e.stopPropagation()\r\n         toggleIsRunning()\r\n         } \r\n         else{\r\n             return\r\n         }\r\n        \r\n    } \r\n\r\n    return(\r\n        <IconButton className={classes.root} onClick={ handleClick}> \r\n       \r\n           {isSelected && isRunning ? <PauseIcon /> : <PlayArrowIcon />}\r\n            \r\n        </IconButton >\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default SingleTaskIcon","import React from 'react';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport sizes from './sizes'\r\n\r\nconst useStyles =  makeStyles({\r\n    \r\n       root: {\r\n        color: '#cacaca',\r\n        '& .MuiTypography-body1' : {\r\n           fontSize: '1.2rem',\r\n           fontFamily: 'Roboto Condensed', \r\n           fontWeight: '300',\r\n           [sizes.up(\"lg\")] : {\r\n               fontSize: '1.5rem'\r\n           }\r\n           \r\n        },\r\n        '& .MuiTypography-colorTextSecondary' : {\r\n            color: '#54555c',\r\n            [sizes.up(\"lg\")] : {\r\n                fontSize: '1rem'\r\n            }\r\n            \r\n        },\r\n        '& .MuiInputBase-input' : {\r\n            color: '#f1f1f1',\r\n            fontSize: '1.4rem',\r\n           fontFamily: 'Roboto Condensed',\r\n           fontWeight: '300'\r\n        }\r\n       }\r\n})\r\n\r\n\r\nconst SingleTaskItem = (props) => {\r\n    \r\n    const {\r\n           isForm,\r\n           task, \r\n           pomsCompleted, \r\n           pomTotal, \r\n           handleSubmit, \r\n           taskName,\r\n           setTaskName, \r\n           isSelected\r\n        } = props;\r\n\r\n    const classes =  useStyles(props);\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        {isForm? \r\n            <div>\r\n                <ValidatorForm onSubmit={handleSubmit}>\r\n                    <TextValidator\r\n                        className={classes.form}\r\n                        autoFocus\r\n                        name=\"task\"\r\n                        type=\"text\"\r\n                        value={taskName}\r\n                        onChange={setTaskName}\r\n                        fullWidth\r\n                        validators={['required']}\r\n                        errorMessages={['This task needs a name']}\r\n                    />\r\n                </ValidatorForm>\r\n            </div>\r\n            :\r\n                <div>\r\n                {isSelected?     \r\n                <ListItemText className={classes.root} \r\n                primary={task} \r\n                secondary={ `${pomsCompleted} of ${pomTotal}`} />\r\n                :\r\n                <ListItemText className={classes.root} \r\n                primary={task} />}\r\n               </div>\r\n        }\r\n        </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default SingleTaskItem;","import React, {useState} from 'react'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport sizes from './sizes'\r\n\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        textAlign: 'right',\r\n        flex: 1,\r\n        '& svg': {\r\n            color: '#8a8889',\r\n            [sizes.up(\"lg\")] : {\r\n                fontSize: '2rem'\r\n            }\r\n        },\r\n        \r\n    }\r\n})\r\n\r\n\r\n\r\nconst SingleTaskMenu = props => {\r\n\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const classes = useStyles(props)\r\n    const {\r\n        editTask, \r\n        deleteTask, \r\n        handleSubmit, \r\n        isForm, \r\n        isRunning} \r\n        = props;\r\n\r\n\r\n    const handleMenuClick = e => {\r\n        e.stopPropagation();\r\n        setAnchorEl(e.currentTarget);\r\n      };\r\n\r\n      const handleClose = () => {\r\n        setAnchorEl(null);\r\n      };\r\n\r\n     const handleEdit = e => {\r\n        e.stopPropagation()\r\n        editTask();\r\n        setAnchorEl(null);\r\n     }\r\n\r\n     const handleDelete= e => {\r\n         e.stopPropagation()\r\n         deleteTask()\r\n     }\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        {  \r\n        isForm?\r\n            <IconButton onClick={handleSubmit}>\r\n                <CheckIcon />\r\n            </IconButton>\r\n            :\r\n            <div>\r\n            <IconButton onClick={handleMenuClick} disabled={isRunning}>\r\n                <MoreVertIcon />\r\n            </IconButton>\r\n                <Menu \r\n                    id=\"Single task menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={handleDelete}>Delete</MenuItem>\r\n                    <MenuItem onClick={handleEdit}>Edit</MenuItem>\r\n                </Menu>\r\n            </div>\r\n        }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SingleTaskMenu;","import { useState } from  'react'\r\n\r\nexport default initialVal => {\r\n    const [value, setValue] = useState(initialVal);\r\n    const handleChange = (e) =>{\r\n        setValue(e.target.value);\r\n    };\r\n    const reset = () => {\r\n        setValue('')\r\n    };\r\n    return [value, handleChange, reset]\r\n}","import React,{useContext} from 'react'\r\nimport {TasksContext} from './contexts/task.context'\r\nimport {SessionContext} from './contexts/session.context'\r\nimport SingleTaskIcon from './SingleTaskIcon'\r\nimport SingleTaskItem from './SingleTaskItem'\r\nimport SingleTaskMenu from './SingleTaskMenu'\r\nimport useInputState from './Hooks/UseInputState'\r\nimport useToggle from './Hooks/UseToggle'\r\n\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    \r\n        root: {\r\n            padding: '3px',\r\n            '& .MuiListItem-root.Mui-selected' : {\r\n                backgroundColor: 'rgba(255,255,255,0.1)'\r\n            }\r\n        },\r\n\r\n        bottomDivider: {\r\n            backgroundColor: '#f6f6f6',\r\n            opacity: '.05',\r\n            height: '1px',\r\n            marginLeft: '48px',\r\n            marginRight: '10px'\r\n        },\r\n})\r\n\r\n\r\nconst Task = props =>{\r\n\r\n    const [isForm, toggleForm] = useToggle(false)\r\n    const [taskName, setTaskName] = useInputState(`${props.task}`)\r\n\r\n    const {taskSelected, changeTaskSelected, deleteTask, changeTaskName} = useContext(TasksContext)\r\n    const {isRunning, toggleIsRunning} = useContext(SessionContext)\r\n\r\n    const classes = useStyles(props)\r\n    const {\r\n        pomTotal, \r\n        id, \r\n        task, \r\n        pomsCompleted, \r\n        index, \r\n                } = props;\r\n\r\n    const handleListItemClick = e =>{\r\n        e.stopPropagation();\r\n        //locks selection while clock is running or is a form\r\n        if(isRunning || isForm){\r\n            return\r\n        }\r\n        else{\r\n        //starts clock if already selected (double-click)\r\n                if (index === taskSelected){\r\n            toggleIsRunning();\r\n            }\r\n            //changes what is selected\r\n            else{\r\n            changeTaskSelected(index);\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    const handleDelete = () =>{\r\n        deleteTask(id)\r\n        //Create method for point deduction HERE\r\n    }\r\n\r\n     const handleSubmit = e => {\r\n         e.stopPropagation();\r\n         e.preventDefault();\r\n         changeTaskName(taskName, id)\r\n         toggleForm()\r\n     }\r\n\r\n    const isSelected = taskSelected === index;\r\n    \r\n    \r\n    return(\r\n     \r\n    <div>    \r\n        \r\n    <ListItem \r\n    className={classes.root}\r\n    selected={isSelected}\r\n    onClick={handleListItemClick}\r\n    disabled={(!isSelected && isRunning)}\r\n    >\r\n        <SingleTaskIcon \r\n        isSelected={isSelected}\r\n        toggleIsRunning={toggleIsRunning}\r\n        isRunning={isRunning}\r\n        />\r\n        <SingleTaskItem \r\n        className={classes.taskText}\r\n        isSelected={isSelected}\r\n        task={task}\r\n        isForm={isForm}\r\n        isRunning={isRunning}\r\n        taskName={taskName}\r\n        setTaskName={setTaskName}\r\n        pomTotal={pomTotal}\r\n        pomsCompleted={pomsCompleted}\r\n        handleSubmit={handleSubmit}\r\n        />\r\n        <SingleTaskMenu \r\n        className={classes.taskMenu}\r\n        deleteTask={handleDelete}\r\n        editTask={toggleForm}\r\n        handleSubmit={handleSubmit}\r\n        isForm={isForm}\r\n        isRunning={isRunning}\r\n        />\r\n        \r\n    </ListItem>\r\n    <Divider className={classes.bottomDivider} />\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Task","import React, {useContext} from 'react'\r\nimport {TasksContext} from './contexts/task.context'\r\nimport Task from './Task'\r\nimport sizes from './sizes'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ControlPointIcon from '@material-ui/icons/ControlPoint';\r\n\r\nimport SimpleBar from 'simplebar-react';\r\nimport './simplebar.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport { SessionContext } from './contexts/session.context';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        // height: '32%',\r\n        marginTop: '1rem',\r\n        [sizes.up(\"lg\")]: {\r\n            gridRow: '3/5',\r\n            gridColumn: '2',\r\n            height: '60%',\r\n            alignSelf: 'center',\r\n            marginTop: '6rem',\r\n          }\r\n    },\r\n\r\n    innerList: {\r\n        padding: '0',\r\n    },\r\n    mainList: {\r\n        height: '23vh',\r\n        [sizes.vertical(\"sm\")]: {\r\n          height: '26vh',  \r\n        },\r\n        [sizes.vertical(\"md\")]: {\r\n          height: '28vh',  \r\n        },\r\n        [sizes.vertical(\"lg\")]: {\r\n            height: '31vh'\r\n        },\r\n\r\n        [sizes.up(\"sm\")]: {\r\n            maxWidth: '500px',\r\n            alignSelf: 'center',\r\n            width: '100%'\r\n        },\r\n        [sizes.up(\"lg\")]: {\r\n            maxWidth: '600px',\r\n            width: '100%',\r\n            height: '40vh',\r\n        }, \r\n    },\r\n    addTaskPanel: {\r\n        \r\n        height: '100%',\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        [sizes.up('lg')]: {\r\n            transform: 'translateY(-2rem)',\r\n            [sizes.vertical('lg')]: {\r\n                transform: 'translateY(-4rem)',\r\n                fontSize: '20rem'\r\n            }\r\n        },\r\n       '& svg': {\r\n           color: '#3f51b5',\r\n           opacity: '0.5',\r\n           fontSize: '10rem',\r\n           [sizes.up('lg')]: {\r\n               fontSize: '15rem',\r\n               [sizes.vertical('lg')]: {\r\n                   fontSize: '20rem'\r\n               }\r\n           },\r\n           transition: 'ease-in-out .1s',\r\n           '&:hover' : {\r\n              transform: 'scale(1.1)'\r\n           }\r\n       }\r\n    }\r\n}) \r\n\r\nconst TodoList = props =>{\r\n\r\n    const {toggleModal} = useContext(SessionContext)\r\n    const {tasks} = useContext(TasksContext)\r\n    const classes = useStyles(props)\r\n\r\n        \r\n\r\n    return(\r\n        <div className={classes.root}>\r\n           {tasks.length > 0?  \r\n            <SimpleBar \r\n            forceVisible=\"y\" \r\n            autoHide={false}\r\n            className={classes.mainList}\r\n            >\r\n            <List component=\"ul\" aria-label=\"main list\" className={classes.innerList}>     \r\n                \r\n                                     \r\n                        {tasks.map( (task,index) => (\r\n                            <Task \r\n                                task={task.task}\r\n                                pomTotal={task.pomTotal}\r\n                                pomsCompleted={task.pomsCompleted}\r\n                                key={task.id}\r\n                                id={task.id}\r\n                                index={index}\r\n                            />\r\n                        ))}\r\n            </List>\r\n            </SimpleBar>\r\n            :\r\n            <div className={classes.addTaskPanel}>\r\n                <IconButton onClick={toggleModal}>\r\n                    <ControlPointIcon />\r\n                </IconButton>\r\n            </div>    \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList","import React,{useContext} from 'react'\r\nimport {SessionContext} from './contexts/session.context'\r\nimport {TasksContext} from './contexts/task.context'\r\nimport { makeStyles } from '@material-ui/core'\r\nimport sizes from './sizes'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '10%',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        [sizes.up(\"lg\")]: {\r\n           gridRow: '3',\r\n           gridColumn: '2',\r\n           alignSelf: 'flex-start',\r\n           marginTop: '6rem'\r\n          },\r\n    },\r\n    bigText: {\r\n        fontWeight: '100',\r\n        fontSize: '2rem',\r\n        margin: '0',\r\n        [sizes.vertical(\"sm\")]: {\r\n            margin: '1rem 0 1rem 0'\r\n        },\r\n        [sizes.up(\"sm\")]: {\r\n            fontSize: '2.5rem',\r\n        },                    \r\n        [sizes.up(\"lg\")]: {\r\n            fontSize: '3rem',\r\n        },                    \r\n    }, \r\n    \r\n})\r\n\r\nconst BigText = (props) => {\r\n\r\n    const classes = useStyles(props)\r\n    const {tasks} = useContext(TasksContext)\r\n    const {isPom, isRunning} = useContext(SessionContext)\r\n\r\n    const genInstructionText = () => {\r\n        if(tasks.length <= 0){\r\n            return 'Add a Task'\r\n        }\r\n        else if(isPom){\r\n            if(isRunning){\r\n                return 'Focus'\r\n            }\r\n            else{\r\n               return 'Choose a Task'\r\n            }\r\n        }\r\n        else{\r\n            if(isRunning){\r\n                return  'On Break'\r\n            }\r\n            else{\r\n                return `Take a Break`\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <header className={classes.root}>\r\n        <h1 className={classes.bigText}>{genInstructionText()}</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default BigText ","import React, {useContext, useState, useEffect} from 'react';\r\nimport useInputState from './Hooks/UseInputState';\r\nimport {TasksContext} from './contexts/task.context'\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nimport { useTheme} from '@material-ui/core/styles';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root:{\r\n    '& .MuiDialog-paperWidthSm' : {\r\n      background: '#0d0e17',\r\n      \r\n    },\r\n\r\n    '& .MuiDialog-paperFullScreen' : {\r\n      background: '#0d0e17',\r\n      height: '100vh',\r\n      width: '100vh',\r\n      maxWidth: '100vw',\r\n      padding: '0',\r\n      margin: '0'\r\n    },\r\n  },\r\n  label : {\r\n    fontSize: '1.6rem',\r\n    color : '#f6f6f6',\r\n    fontFamily: 'Roboto Condensed',\r\n    marginBottom: '1.2rem'\r\n},\r\ninputSection : {\r\n  margin: '1rem 1rem 0 2rem',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  \r\n},\r\ninput:{\r\n  borderRadius: '.5rem',\r\n  marginBottom: '1rem',\r\n  '& .MuiInputBase-root' : {\r\n      color : '#f6f6f6',\r\n      fontFamily: 'Roboto Condensed',\r\n      fontSize: '1.4rem',\r\n  },\r\n  '& .MuiInputBase-input' : {\r\n    backgroundColor: 'rgba(0,0,0,.3)'\r\n  },\r\n  '& .MuiFormHelperText-root' : {\r\n    color: '#f6f6f6',\r\n    fontFamily: 'Roboto Condensed',\r\n    fontSize:'1rem'\r\n  }\r\n},\r\n\r\n  title: {\r\n    '& .MuiTypography-h6' :{\r\n    margin: '4rem 0 1rem 2rem',\r\n    fontSize: '2.5rem',\r\n    fontFamily: `Roboto Condensed`,\r\n    color : '#f6f6f6',\r\n    },\r\n  },\r\n  buttonText:{\r\n    fontSize: '1.2rem',\r\n    fontFamily: 'Roboto Condensed'\r\n  },\r\n  content: {\r\n    '& form' : {\r\n      height: '50%'\r\n    }\r\n  }\r\n})\r\n\r\n\r\nfunction AddTaskForm(props) {\r\n\r\n  const classes = useStyles(props);\r\n  const theme = useTheme();\r\n  const [open] = useState(true);\r\n  const [taskName, setTaskName, resetTaskName] = useInputState('');\r\n  const [poms, setPoms, resetPoms ] = useInputState('');\r\n\r\n  const {addTask} = useContext(TasksContext)\r\n  \r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('xs'));\r\n\r\n  const {\r\n    closeModal, \r\n  } = props;\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isNumber', value => Number.isInteger\r\n    (parseInt(value)) && value > 0 && value < 25 \r\n    )}, [poms]);\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n\r\n    addTask(taskName, parseInt(poms));\r\n    resetTaskName();\r\n    resetPoms();\r\n    closeModal();\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Dialog\r\n        fullScreen={fullScreen}\r\n        open={open}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"Add a new task.\"\r\n        className={classes.root}\r\n      >\r\n\r\n        <DialogTitle className={classes.title}>Add a Task</DialogTitle>\r\n        \r\n        <DialogContent className={classes.content}>\r\n            <ValidatorForm onSubmit={handleSubmit}>\r\n            <div className={classes.inputSection}>\r\n            <label className={classes.label} htmlFor='taskName'>Task Name</label>\r\n                <TextValidator\r\n                    autoFocus\r\n                    className={classes.input}\r\n                    id='taskName'\r\n                    name=\"task\"\r\n                    type=\"text\"\r\n                    value={taskName}\r\n                    onChange={setTaskName}\r\n                    fullWidth\r\n                    validators={['required']}\r\n                    errorMessages={['The task needs a name']}\r\n                    autoComplete='off'\r\n                />\r\n                <label className={classes.label} htmlFor='pomsRequired'>Number of Poms</label>\r\n                <TextValidator\r\n                    id='pomsRequired'\r\n                    className={classes.input}\r\n                    name=\"pomsRequired\"\r\n                    helperText=\"Intervals of 25 mins. Please enter a number.\"\r\n                    type=\"number\"\r\n                    value={poms}\r\n                    onChange={setPoms}\r\n                    fullWidth\r\n                    validators={['required', 'isNumber']}\r\n                    errorMessages={['Enter a number', 'Must be a number between 0-24']}\r\n                    autoComplete='off'\r\n                />\r\n\r\n                </div>\r\n                <DialogActions>\r\n                    <Button onClick={closeModal} color=\"primary\"className={classes.buttonText}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button color=\"primary\" type='submit' className={classes.buttonText}>\r\n                        Add\r\n                    </Button> \r\n                </DialogActions>\r\n                </ValidatorForm>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AddTaskForm;","import React, {useContext, useEffect} from 'react'\r\nimport AddTaskForm from './AddTaskForm'\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddBoxIcon from '@material-ui/icons/AddBox';\r\nimport {SessionContext} from './contexts/session.context'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport sizes from './sizes'\r\nimport { TasksContext } from './contexts/task.context';\r\n\r\nconst useStyles = makeStyles({\r\n    plusIconContainer: {\r\n        position: 'absolute',\r\n        bottom: '0',\r\n        right: '0',\r\n        [sizes.up(\"lg\")]: {\r\n            position: 'relative',\r\n            gridRow: '4',\r\n            gridColumn: '1',\r\n            justifySelf: 'flex-end',\r\n            alignSelf: 'flex-start',\r\n            marginTop: '1.7rem',\r\n            transform: 'translateX(-9rem)',\r\n            [sizes.vertical('lg')]:{\r\n                marginTop: '-2rem'\r\n            }\r\n          },\r\n        [sizes.up('xl')]: {\r\n            [sizes.vertical('lg')]:{\r\n                transform: 'translateX(-9rem)',\r\n                marginTop: '0'\r\n            }\r\n        },\r\n        '& svg' : {\r\n            color: '#f6f6f6',\r\n            opacity: '0.3',\r\n            fontSize: '3.5rem',\r\n            cursor: 'pointer',\r\n            transition: 'ease-in-out .1s',\r\n            '&:hover' : {\r\n              transform: 'scale(1.1)'\r\n            },\r\n            [sizes.up(\"lg\")]:{\r\n                fontSize: '6rem',\r\n            }\r\n        },\r\n    },\r\n    plusIcon: {\r\n        padding: '0',\r\n        \r\n    }\r\n})\r\n\r\nconst AddTaskButton = (props) => {\r\n\r\n    const classes = useStyles(props)\r\n\r\n    const {isRunning, drawerOpen, modalOpen, toggleModal} = useContext(SessionContext)\r\n    const {tasks} = useContext(TasksContext)\r\n\r\n    const handlePress = e => {\r\n        if(!drawerOpen && !modalOpen){\r\n            if(e.key === 'Enter'){\r\n                e.preventDefault();\r\n                toggleModal();  \r\n            } \r\n       }\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handlePress)\r\n        return () => {\r\n          window.removeEventListener('keydown', handlePress)\r\n        };\r\n      })\r\n\r\n\r\n    return( \r\n        <div className={classes.plusIconContainer}>\r\n            {tasks.length > 0 &&\r\n            <IconButton aria-label=\"Add Item\" onClick={toggleModal} className={classes.plusIcon} disabled={isRunning}>\r\n                <AddBoxIcon />\r\n            </IconButton>\r\n            }\r\n            {modalOpen && <AddTaskForm \r\n            closeModal={toggleModal} \r\n            />}                   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddTaskButton","import React, {useContext, useEffect} from 'react';\r\nimport {SessionContext} from './contexts/session.context';\r\nimport sizes from './sizes';\r\n\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronLeft';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    menuOpen: {\r\n        padding: '0',\r\n        alignSelf: 'flex-start',\r\n        justifySelf: 'flex-start',\r\n        [sizes.up('lg')]: {\r\n            gridRow: '1',\r\n            gridColumn: '1'\r\n        },\r\n        '& svg' : {\r\n          color: '#f6f6f6',\r\n          fontSize: '2rem',\r\n          opacity: '.3',\r\n          transition: 'ease-in-out .1s',\r\n          [sizes.up('md')]: {\r\n              fontSize: '3rem'\r\n            },\r\n           [sizes.up('lg')]: {\r\n               fontSize: '4rem',\r\n               transform: 'translateX(-1rem)'\r\n           }\r\n           \r\n         \r\n        },\r\n\r\n      },\r\n})\r\n\r\n\r\nconst MenuButton = props => {\r\n\r\n    const {drawerOpen, toggleDrawer} = useContext(SessionContext)\r\n    const classes = useStyles(props)\r\n\r\n\r\n    const handlePress = e => {\r\n            e.key === 'Escape' && toggleDrawer()\r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handlePress)\r\n        return () => {\r\n          window.removeEventListener('keydown', handlePress)\r\n        };\r\n      })\r\n\r\n    return(\r\n        <IconButton \r\n            className={classes.menuOpen}\r\n            aria-label=\"open menu\" \r\n            onClick={toggleDrawer}\r\n        >\r\n            {drawerOpen? \r\n            <ChevronRightIcon/>\r\n            :\r\n            <ChevronLeftIcon />\r\n    }\r\n        </IconButton>   \r\n    )\r\n\r\n}\r\n\r\nexport default MenuButton","import React, {useContext} from 'react';\r\nimport {TasksContext} from './contexts/task.context'\r\nimport {GameStateContext} from './contexts/gameState.context'\r\nimport ScoreBoard from './ScoreBoard'\r\nimport Clock from './Clock'\r\nimport TodoList from './TodoList'\r\nimport BigText from './BigText';\r\nimport AddTaskButton from './AddTaskButton'\r\nimport MenuButton from './MenuButton'\r\nimport sizes from './sizes'\r\n\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      backgroundColor: '#0d0e17',\r\n      height: '100%',\r\n      width: '100vw',\r\n      color: '#f6f6f6',\r\n      alignItems: 'center',\r\n      [sizes.up(\"lg\")]: {\r\n        display: 'grid',\r\n        gridTemplateRows: '11% 7% 60% 22%',\r\n        gridTemplateColumns: '55% 45%',\r\n        maxWidth: '1000px'\r\n      },\r\n      [sizes.up(\"xl\")]: {\r\n        maxWidth: '1200px'\r\n      }  \r\n    },\r\n\r\n  });\r\n\r\n\r\nconst WorkSpace = (props) => {\r\n\r\n    const {tasks} = useContext(TasksContext)\r\n    const {gameState, endStreak, persistStreak} = useContext(GameStateContext)\r\n    \r\n    \r\n    const {options} = props;\r\n    \r\n    const classes = useStyles(props);\r\n    \r\n        const currentDay = JSON.stringify(new Date().getDate()) \r\n        const isCurrentDay = gameState.lastDate === currentDay\r\n\r\n\r\n        if(!isCurrentDay){\r\n          if(tasks.length>0){\r\n            endStreak(currentDay)\r\n          }\r\n          else{\r\n            persistStreak(currentDay)\r\n          }\r\n        }\r\n\r\n        \r\n        return(\r\n                \r\n                <div className={classes.root}>\r\n                        <MenuButton />\r\n                        <ScoreBoard />\r\n                        <BigText className={BigText}/>\r\n                        <Clock \r\n                        className={classes.circleClock}\r\n                        options={options}\r\n                        />\r\n                        <TodoList />\r\n                        <AddTaskButton />\r\n                </div>\r\n        )\r\n    }\r\n\r\nexport default WorkSpace;\r\n ","import React, {useState, useEffect, useContext} from 'react';\r\nimport {SessionContext} from './contexts/session.context'\r\nimport {Link, useHistory } from 'react-router-dom';\r\nimport tomato from './tomato.svg'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\n\r\nimport sizes from './sizes';\r\nimport { GameStateContext } from './contexts/gameState.context';\r\n\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        height: '100%',\r\n        width: '100vw',\r\n        backgroundColor: '#0d0e17',\r\n        color: '#f6f6f6',\r\n      [sizes.up('md')] : {\r\n        width: '50vw',\r\n      },\r\n      [sizes.up('lg')] : {\r\n        width: '40vw',\r\n      },\r\n      [sizes.up('xl')] : {\r\n        width: '30vw',\r\n      },\r\n    },\r\n    panel: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-around',\r\n        width: '100%',\r\n        alignItems: 'center',\r\n    },\r\n    list:{\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        maxHeight: '40%',\r\n        marginTop: '1rem',\r\n    },\r\n    listArrow: {\r\n        position: 'fixed',\r\n        transform: 'translateX(-3rem)',\r\n        color: '#f6f6f6'\r\n    },\r\n    listItem: {\r\n      color: '#f6f6f6',\r\n      fontFamily: `'Press Start 2P'`,\r\n      fontSize: '1rem',\r\n      textDecoration: 'none',\r\n      padding: '.8rem',\r\n      '& p': {\r\n          margin:'.3rem',\r\n          cursor: 'pointer',\r\n      },\r\n    },\r\n    mastHead : {\r\n        fontFamily: `Roboto Condensed`,\r\n        fontWeight: '300',\r\n        fontSize: '2.3rem',\r\n        display: 'flex',\r\n        marginTop: '4rem',\r\n    },\r\n    crush:{\r\n        fontFamily: `'Press Start 2P'`,\r\n        color:'#9b161a',\r\n        fontWeight:'500',\r\n        fontStyle: 'italic',\r\n        textTransform: 'uppercase',\r\n        textDecoration: 'underline',\r\n        fontSize:'.8em',\r\n        alignSelf: 'center'\r\n    },\r\n    tomato:{\r\n        opacity: '0.2',\r\n        objectFit: 'contain',\r\n        maxHeight: '25%'\r\n    },\r\n    highScore: {\r\n        margin: '2rem',\r\n        fontFamily: `'Press Start 2P'`,\r\n        fontSize: '.6rem',\r\n    },\r\n    menuClose: {\r\n      zIndex: '5',\r\n      position: 'absolute',\r\n      top: '0px',\r\n      right: '0px',\r\n      padding: '0',\r\n      '& svg' : {\r\n        color: '#f6f6f6',\r\n        fontSize: '46px',\r\n        opacity: '.3',\r\n        [sizes.up('md')]: {\r\n            fontSize: '50px'\r\n        },\r\n        [sizes.up('lg')]: {\r\n            fontSize: '55px'\r\n        }\r\n      }\r\n    },\r\n  })\r\n\r\nconst SideMenu = props => {\r\n\r\n    const classes = useStyles(props);\r\n\r\n    const {drawerOpen, toggleDrawer} = useContext(SessionContext);\r\n    const {gameState} = useContext(GameStateContext)\r\n    const history = useHistory()\r\n    const [listItemSelected, setListItemSelected] = useState(0)\r\n\r\n    const pageRefs = ['', 'options', 'faq']\r\n\r\n\r\n    const changePage = (page) => {\r\n        history.push(`./${pageRefs[page]}`)\r\n        toggleDrawer()\r\n    }\r\n\r\n\r\n    const handleKeyPress = e => {\r\n        if(drawerOpen){\r\n            e.preventDefault()  \r\n        switch(e.key) {\r\n            case 'ArrowUp':\r\n                listItemSelected === 0? setListItemSelected(2) : setListItemSelected(listItemSelected - 1)\r\n            break;\r\n            case 'ArrowDown':\r\n                listItemSelected === 2 ? setListItemSelected(0) : setListItemSelected (listItemSelected + 1)\r\n            break;\r\n            case 'Tab':\r\n                listItemSelected === 2 ? setListItemSelected(0) : setListItemSelected (listItemSelected + 1);    \r\n            break; \r\n            case 'Enter':\r\n                changePage(listItemSelected)\r\n            break;\r\n            default:\r\n                return\r\n        }\r\n    }\r\n}\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', handleKeyPress)\r\n        return () => \r\n            { window.removeEventListener('keydown', handleKeyPress)\r\n        }\r\n    })\r\n\r\n\r\n    const handleClick = e => {\r\n        toggleDrawer()\r\n      }\r\n    \r\n    const fullDrawer = () => (\r\n            <div  className={classes.root}>\r\n                <div\r\n                    className={classes.panel}\r\n                    role=\"presentation\"\r\n                    onKeyDown={toggleDrawer}\r\n                >\r\n                \r\n                <h1 className={classes.mastHead}>Pomodoro<span className={classes.crush}>CRUSH</span></h1>\r\n\r\n                <img src={tomato} className={classes.tomato} alt='pixelized tomato'/>\r\n                    <List className={classes.list}>\r\n                        <Link to=\"/\" className={classes.listItem}>\r\n                            <ListItem button disableRipple={true} onClick={handleClick} selected={listItemSelected===0} >\r\n                                {listItemSelected === 0 &&\r\n                                <ListItemIcon className={classes.listArrow}>\r\n                                    <PlayArrowIcon/>\r\n                                </ListItemIcon>\r\n                                }\r\n                                <p>Start</p>\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/options\" className={classes.listItem}>\r\n                            <ListItem button disableRipple={true} onClick={handleClick} selected={listItemSelected===1}>\r\n                            {listItemSelected === 1 &&\r\n                                <ListItemIcon className={classes.listArrow}>\r\n                                    <PlayArrowIcon/>\r\n                                </ListItemIcon>\r\n                                }\r\n                                <p>Options</p>\r\n                            </ListItem>\r\n                        </Link>\r\n                        <Link to=\"/faq\" className={classes.listItem}>\r\n                            <ListItem button disableRipple={true}  onClick={handleClick} selected={listItemSelected===2}>\r\n                            {listItemSelected === 2 &&\r\n                                <ListItemIcon className={classes.listArrow}>\r\n                                    <PlayArrowIcon/>\r\n                                </ListItemIcon>\r\n                                }\r\n                                <p>FAQs</p>\r\n                            </ListItem>\r\n                        </Link>\r\n                    </List>\r\n                    <p className={classes.highScore}>High Score: {gameState.highScore}</p>\r\n                </div>\r\n            </div>\r\n    )\r\n\r\n    return (\r\n            <div>\r\n                <Drawer open={drawerOpen} onClose={toggleDrawer}>\r\n                {fullDrawer()}\r\n                </Drawer>\r\n                     \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideMenu","\r\n\r\nconst faqData = [\r\n        {       \r\n         subjectTitle:'FAQs', \r\n\r\n        subjectTopics: [\r\n            'About Pomodoro Crush',\r\n            'The Pomodoro Method',\r\n            'Development',],\r\n\r\n        subjectQuestions : [\r\n            [\r\n                'What is Pomodoro Crush?',\r\n                'What makes Pomodoro Crush Different?',\r\n                `How should I use this?`\r\n            ],\r\n            [\r\n                'What is a Pomodoro?', \r\n                'How does a Pomodoro work?', \r\n                'What are the benefits?',\r\n            ],\r\n            [\r\n                'Who Made This?',\r\n                'What are some future updates?',\r\n            ],\r\n        ], \r\n        subjectAnswers: [\r\n            [\r\n                `Pomodoro Crush is a gamified productivity tool that combines the focus of a Pomodoro app with the simple organization of a todo list.`,\r\n                `Pomodoro Crush specializes in deep, deliberate focus applied to larger tasks.`,\r\n                 `First decide on the amount of time(Pomodoros) you would like to spend every day. Then create tasks in the Todo List component. \r\n                 Choose how long you would like to work on these tasks (Add Pomodoros). It's best to find the right balance. Too many Pomodoros, \r\n                 and you'll burn out. Too little and you might loose interest. Once you find the right balance, begin to gradually increase\r\n                 that amount over time. Build your focus as if it were a bicep.`,\r\n            ],\r\n            [\r\n                `A Pomodoro is a productivity technique designed to break down any large task into short, timed intervals.`,\r\n\r\n                `The user dedicates a given amount of time (usually 25 minutes) to focus on a single task without interuption, then takes a break (5 minutes).`,\r\n\r\n                `The Pomodoro Technique helps the user work their focus muscles by demanding that they give a task their undivided attention.\r\n                Also, by breaking tasks down into smaller chunks, the practitioner is less likely to procrastinate`,\r\n            ],\r\n            [\r\n                `Hi, my name is Jordan Lesich and thanks for taking the time to learn about Pomodoro Crush. Like pretty much everyone who frequently uses a computer \r\n                or phone, I've fought a hard-won battle with focus and procrastination. My goal is to create technologies that help people act on their greatest ambitions\r\n                by freeing them from meaningless distractions.`,\r\n                `This is a protoype version in its early stages of development. There are many planned upgrades on the way. Much of this will be generated by user \r\n                feedback. I'd like to spend time deepening the gamification system, making the user experience more customizable, and building an entire a suite of \r\n                tools geared to helping people get things done`,\r\n            ],\r\n            ],\r\n        },\r\n        {       \r\n        subjectTitle:'Game Rules', \r\n\r\n        subjectTopics: [\r\n                    'Rules',\r\n                    'Gamification',\r\n                    'Planned Upgrades'\r\n                    ],\r\n\r\n        subjectQuestions : [\r\n            [\r\n                'Objective',\r\n                'Points',\r\n                'How does a player earn points?',\r\n                `Crush Power`,\r\n                `Does Crush Power reset like points?`,\r\n                `Strategy`,\r\n            ],\r\n\r\n            [\r\n                'What is gamification?', \r\n                'How will Gamification help me?'\r\n            ],\r\n            [\r\n                'Levelling UP', \r\n            ],\r\n        ], \r\n        subjectAnswers: [\r\n\r\n            [\r\n                `The key objective of Pomodoro Crush is to get quality, focused work done every day.`,\r\n\r\n                `In Pomodoro Crush, the points are a marker of daily progress. Every night the points reset, \r\n                giving the user a shot at a new high score. `,\r\n\r\n                'The player recieves 100 points for each Pomodoro completed. They can increase this amount by increasing their Crush Power',\r\n\r\n                `Crush Power is a bonus system designed to enforce consistency. The amount of Crush Power is added onto each Pomodoro. \r\n                Players recieve Crush Power for finishing Pomodoros and bonuses for finishing tasks.`, \r\n\r\n                `If the player has finished all their tasks, then they get to carry their Crush Power over into the next day. If there are still tasks\r\n                left over by midnight, then the score resets to zero`,\r\n\r\n                `In order to get the highest score possible, choose an amount of Pomodoros you would like to spend working on each day. \r\n                Then choose what to spend that time on. It's best to find the right balance. Too many Pomodors, and you'll burn out. Too little\r\n                and you might loose interest. Once you find the right balance, begin to gradually increase that amount over time`,\r\n            ],\r\n\r\n            [\r\n                `Gamification is a design approach that adds game elements to non-game systems, mostly to increase motivation and enhance usability.`,\r\n                `All too often the goals we wish to achieve yield little short term benefits. Gamification seeks to bridge that gap by awarding superficial \r\n                short-term rewards that can help signify progress.`\r\n            ],\r\n        \r\n            [\r\n                `In the next update, players will recieve a higher Crush Power multiplyer for each successful day in a row. In addition to that, players will\r\n                 be able to spend hard-earned Crush Points for a higher level, which will generate more Crush Points, giving an even bigger advantage to those\r\n                 who are consistent.`,\r\n            ]\r\n            ],\r\n        },\r\n]\r\n\r\n\r\nexport {faqData}","import React from 'react'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport ExpandLess from '@material-ui/icons/ExpandLess';\r\nimport ExpandMore from '@material-ui/icons/ExpandMore';\r\n\r\nconst useStyles = makeStyles({\r\n  questionText: {\r\n      margin: '1rem .5rem 1rem .5rem',\r\n      fontWeight: '300'\r\n  },\r\n  answerText: {\r\n    margin: '1rem 1.5rem 1rem 1.5rem',\r\n    lineHeight: '2',\r\n    fontWeight: '300'\r\n  },\r\n  bottomDivider: {\r\n    backgroundColor: '#090a0b',\r\n    opacity: '1',\r\n    height: '2px',\r\n},\r\n})\r\n\r\nconst QuestionAnswer = props => {\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const {question, answer} = props\r\n    const classes = useStyles(props)\r\n\r\n    const handleClick = (e) => {\r\n        setOpen(!open);\r\n      };\r\n\r\n      \r\n\r\n    return(\r\n            <div>\r\n            <List className={classes.root}>\r\n                <ListItem button onClick={handleClick}>\r\n                <p className={classes.questionText}>{question}</p>\r\n                {open ? <ExpandLess /> : <ExpandMore />}\r\n            </ListItem>\r\n            <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                <ListItem button className={classes.nested} onClick={handleClick} disableRipple={true} >\r\n                        <p className={classes.answerText}>{answer}</p>\r\n                </ListItem>\r\n                </List>\r\n            </Collapse>\r\n                <Divider className={classes.bottomDivider}/>\r\n            </List>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default QuestionAnswer","import React from 'react'\r\nimport QuestionAnswer from './QuestionAnswer'\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        height: '100%',\r\n        margin: '0rem 1rem 0rem 1rem',\r\n    },\r\n    topicTitle: {\r\n        color: '#4f51b3',\r\n        margin: '.5rem'\r\n    },\r\n    topicSpace:{\r\n        paddingTop: '2rem'\r\n    }\r\n\r\n})\r\n\r\nconst Subject = props => {\r\n\r\n    const classes = useStyles(props);\r\n    const {topics, questions, answers} = props;\r\n\r\n    return(\r\n        <div className={classes.root}>\r\n            {topics.map((topic, index ) => (\r\n                <div className={classes.topicSpace} key={index}>\r\n                <h2 className={classes.topicTitle} key={index}>{topic}</h2>\r\n                {questions[index].map((question, i) => (\r\n                    <QuestionAnswer \r\n                    question={question}\r\n                    key={i}\r\n                    answer={answers[index][i]}/>\r\n                ))}\r\n            </div>\r\n            ))\r\n            }\r\n                            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Subject;\r\n\r\n","import React,{useState} from 'react'\r\nimport {faqData} from './FAQ_Data'\r\nimport Subject from './Subject'\r\nimport MenuButton from './MenuButton'\r\nimport sizes from './sizes'\r\n\r\nimport SimpleBar from 'simplebar-react';\r\nimport './simplebar.css';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nconst useStyles = makeStyles(theme => ({ \r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'center',\r\n        alignSelf: 'center',\r\n        color: '#f6f6f6',\r\n        height: '100%',\r\n        width: '100%',\r\n        maxWidth:'1000px',\r\n        \r\n        [sizes.up('md')]:{\r\n            maxWidth: '767px',\r\n            fontSize: '1.4rem'\r\n        },\r\n        \r\n    },\r\n    title: {\r\n        margin: '0 0 2rem 2rem',\r\n        fontSize: '3rem',\r\n        fontWeight: '500',\r\n        [sizes.up('sm')] : {\r\n            alignSelf: 'center',\r\n            marginBottom: '0 0 2rem 0',\r\n            fontSize: '5rem',\r\n        }\r\n    },\r\n    bottomSection: {\r\n       height: '15%'\r\n    },\r\n    tabBar: {\r\n        '& .MuiTab-textColorPrimary':{\r\n            color: '#f6f6f6',\r\n            fontFamily: 'Roboto Condensed',\r\n            fontSize: '24px',\r\n            fontWeight: '300',\r\n            textTransfrom: 'none'\r\n        },\r\n\r\n        '.MuiTab-textColorPrimary.Mui-selected' : {\r\n            color: '#3f51b5',\r\n           \r\n        },\r\n        '& .MuiTabs-flexContainer': {\r\n        justifyContent: 'space-around'\r\n    }\r\n    },\r\n    topDivider: {\r\n        backgroundColor: 'black',\r\n        opacity: '1',\r\n        marginTop: '1rem',\r\n        height: '2px'\r\n    },\r\n\r\n    mainSection: {\r\n        display: 'flex',\r\n        justifyContent: 'end',\r\n        height: '53vh',\r\n        [sizes.up('sm')]:{\r\n            height: '62vh'\r\n        }\r\n    },\r\n    menuButton: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'start'   \r\n    }\r\n})\r\n)\r\n\r\n\r\nconst FAQ = props => {\r\n\r\n    const [tab, setTab] = useState(0);\r\n    const selectedData = faqData[tab]\r\n\r\n    const handleChange = (e, newTab) => {\r\n        setTab(newTab);\r\n      };\r\n    \r\n\r\n    const classes = useStyles(props)\r\n    \r\n    \r\n    const {subjectTopics, subjectQuestions, subjectAnswers} = selectedData;\r\n\r\n    return(\r\n       \r\n        <div className={classes.root}>\r\n            <div className={classes.MenuButton}><MenuButton /></div>\r\n            <h1 className={classes.title}>FAQs</h1>\r\n           <div>\r\n               <Tabs\r\n                    className={classes.tabBar}\r\n                    value={tab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={handleChange}\r\n                    aria-label=\"FAQ Tabs\"\r\n               >\r\n                   <Tab label='About'/>\r\n                   <Tab label='Game Rules'/>\r\n               </Tabs>\r\n               <Divider className={classes.topDivider}/>\r\n            </div>\r\n            <SimpleBar \r\n            className={classes.mainSection}\r\n            forceVisible=\"y\" \r\n            autoHide={false}\r\n            >\r\n           <Subject \r\n             topics={subjectTopics}\r\n             questions={subjectQuestions}\r\n             answers={subjectAnswers}\r\n           />\r\n           </SimpleBar>\r\n           <div className={classes.bottomSection}>\r\n\r\n           </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQ","import React,{useState} from 'react';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {playSFX} from './SFXPlayer'\r\n\r\nconst useStyles = makeStyles({\r\n        root:{\r\n           display: 'flex',\r\n           flexDirection: 'column', \r\n           alignItems: 'center'\r\n          \r\n        },\r\n        inputSection : {\r\n            marginTop: '2rem',\r\n            height: '6rem',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n\r\n        },\r\n        label : {\r\n            fontSize: '24px',\r\n            marginBottom: '.5rem'\r\n        },\r\n        bottomDivider: {\r\n            backgroundColor: '#090a0b',\r\n            opacity: '1',\r\n            height: '2px',\r\n        },\r\n        submitButton:{\r\n            justifySelf: 'start',\r\n            width:'10rem',\r\n            marginTop: '2rem',\r\n            border: '1px solid #3f51b5',\r\n            '& .MuiButton-label' : {\r\n                color: '#3f51b5',\r\n                fontSize: '24px',\r\n                fontFamily: 'Roboto Condensed',\r\n            },\r\n        },\r\n        select:{\r\n            appearance : 'none',\r\n            width: '10rem',\r\n            borderRadius: '.5rem',\r\n            padding: '.5rem 0 .5rem 0',\r\n            border: 'none',\r\n            marginBottom: '1rem',\r\n            backgroundColor: 'rgba(0,0,0,.3)',\r\n            color : '#f6f6f6',\r\n            fontFamily: 'Roboto Condensed',\r\n            fontSize: '20px',\r\n        },\r\n        '& select:focus' : {\r\n            border: 'none',\r\n            outline: '0px'\r\n        },\r\n        option: {\r\n            backgroundColor: '#0d0e17',\r\n            border: 'none',\r\n            outline:'0',\r\n           \r\n        }\r\n    })\r\n    \r\n\r\nconst Audio = props => {\r\n    const {saveOptions, options} = props;\r\n\r\n   const [pomSound, setPomSound] = useState(options.pomSound)\r\n   const [breakSound, setBreakSound] = useState(options.breakSound)\r\n\r\n  \r\n\r\n   const classes = useStyles(props)\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const newAudio = {\r\n            'pomSound' : pomSound,\r\n            'breakSound' : breakSound,\r\n        }\r\n        saveOptions(newAudio)\r\n    }\r\n\r\n    const handlePomChange = e => {\r\n        playSFX(e.target.value);\r\n        setPomSound(e.target.value);\r\n    }\r\n\r\n    const handleBreakChange = (e) => {\r\n        playSFX(e.target.value);\r\n        setBreakSound(e.target.value);\r\n    }\r\n\r\n    const isNotSaved = (pomSound!==options.pomSound || breakSound!==options.breakSound)\r\n\r\n    return(\r\n        <div>\r\n           \r\n            <form onSubmit={handleSubmit} className={classes.root}>\r\n            <div className={classes.inputSection}>\r\n                <label className={classes.label}htmlFor={'pomSelect'}>Pomodoro SFX</label>\r\n                <select\r\n                    className={classes.select}\r\n                    value={pomSound}\r\n                    id=\"pomSelect\"\r\n                    name='pomSound'\r\n                    onChange={handlePomChange}\r\n                    autoFocus\r\n                >\r\n                    <option className={classes.option} value='chime'>Chime</option>\r\n                    <option className={classes.option} value='timeWave'>Time Wave</option>\r\n                    <option className={classes.option} value='theHorror'>The Horror</option>\r\n                    <option className={classes.option} value='glockenspiel'>Glockenspiel</option>\r\n                    <option className={classes.option} value='cowbell'>Cowbell</option>\r\n                    <option className={classes.option} value='sheep'>Sheep</option>\r\n                </select>\r\n                <Divider className={classes.bottomDivider}/>\r\n                </div>\r\n            <div className={classes.inputSection}>\r\n            <label className={classes.label} htmlFor={'breakLength'}>Break SFX</label>\r\n                <select\r\n                    className={classes.select}\r\n                    id=\"breakSelect\"\r\n                    value={breakSound}\r\n                    onChange={handleBreakChange}\r\n                    autoFocus\r\n                >\r\n                    <option className={classes.option} value='chime'>Chime</option>\r\n                    <option className={classes.option} value='timeWave'>Time Wave</option>\r\n                    <option className={classes.option} value='theHorror'>The Horror</option>\r\n                    <option className={classes.option} value='glockenspiel'>Glockenspiel</option>\r\n                    <option className={classes.option} value='cowbell'>Cowbell</option>\r\n                    <option className={classes.option} value='sheep'>Sheep</option>\r\n                </select>\r\n                <Divider className={classes.bottomDivider}/>\r\n            </div>\r\n            \r\n            <Button className={classes.submitButton} variant=\"outlined\" type='submit' disabled={!isNotSaved}>\r\n                Save\r\n            </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Audio","import React,{useEffect} from 'react';\r\nimport useInputState from './Hooks/UseInputState'\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {ValidatorForm, TextValidator} from 'react-material-ui-form-validator';\r\n\r\nconst useStyles = makeStyles({\r\n    root:{\r\n       display: 'flex',\r\n       flexDirection: 'column' ,\r\n       alignItems: 'center'\r\n    },\r\n    inputSection : {\r\n        marginTop: '2rem',\r\n        height: '6rem',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    label : {\r\n        fontSize: '24px'\r\n    },\r\n    bottomDivider: {\r\n        backgroundColor: '#090a0b',\r\n        opacity: '1',\r\n        height: '2px',\r\n    },\r\n    submitButton:{\r\n        justifySelf: 'start',\r\n        width:'10rem',\r\n        marginTop: '2rem',\r\n        border: '1px solid #3f51b5',\r\n        '& .MuiButton-label' : {\r\n            color: '#3f51b5',\r\n            fontSize: '24px',\r\n            fontFamily: 'Roboto Condensed',\r\n        },\r\n    },\r\n    input:{\r\n    width: '10rem',\r\n    borderRadius: '.5rem',\r\n    marginBottom: '1rem',\r\n    backgroundColor: 'rgba(0,0,0,.3)',\r\n    '& .MuiInputBase-root' : {\r\n        color : '#f6f6f6',\r\n        fontFamily: 'Roboto Condensed',\r\n        fontSize: '30px',\r\n        \r\n    },\r\n    '& .MuiInputBase-input' : {\r\n        textAlign: 'center'\r\n    },\r\n    '& .MuiFormHelperText-root' : {\r\n        width: 'max-content',\r\n        fontSize: '16px'\r\n    },\r\n    // `& .Mui`\r\n    '& .MuiFormLabel-root.Mui-error':{\r\n        color : '#f44336',\r\n    },\r\n    }\r\n})\r\n\r\nconst Timing = props => {\r\n   const {saveOptions, options} = props;\r\n\r\n\r\n   const [pomTime, setPomTime] = useInputState(options.pomTime)\r\n   const [breakTime, setBreakTime] = useInputState(options.breakTime)\r\n\r\n   const classes = useStyles(props)\r\n\r\n   \r\n    \r\n  useEffect(() => {\r\n    ValidatorForm.addValidationRule('isNumber', value => Number.isInteger\r\n    (parseInt(value))\r\n    )}, [pomTime, breakTime])\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        const newTime = {\r\n            'pomTime' : pomTime,\r\n            'breakTime' : breakTime\r\n        }\r\n        saveOptions(newTime)\r\n    }\r\n\r\n    const isNotSaved = (pomTime!==options.pomTime || breakTime!==options.breakTime) \r\n    \r\n\r\n    return(\r\n        <div >\r\n           <ValidatorForm  onSubmit={handleSubmit} className={classes.root}>\r\n            <div className={classes.inputSection}>\r\n                <label className={classes.label}htmlFor={'pomLength'}>Pomodoro Length</label>\r\n                <TextValidator\r\n                    className={classes.input}\r\n                    id={'pomLength'}\r\n                    autoFocus\r\n                    margin=\"dense\"\r\n                    name=\"task\"\r\n                    secondary={'In Minutes'}\r\n                    value={pomTime}\r\n                    onChange={setPomTime}\r\n                    fullWidth\r\n                    validators={['required', 'isNumber']}\r\n                    errorMessages={['Must have a time', 'Must be an amount of minutes']}\r\n                    autoComplete='off'\r\n                />\r\n                <Divider className={classes.bottomDivider}/>\r\n            </div>\r\n            <div className={classes.inputSection}>\r\n            <label className={classes.label}htmlFor={'breakLength'}>Break Length</label>\r\n                <TextValidator\r\n                    id={'breakLength'}\r\n                    className={classes.input}\r\n                    margin=\"dense\"\r\n                    name=\"pomsRequired\"\r\n                    secondary='In Minutes'\r\n                    value={breakTime}\r\n                    onChange={setBreakTime}\r\n                    fullWidth\r\n                    validators={['required', 'isNumber']}\r\n                    errorMessages={['Enter a number', 'Must be an amount of minutes']}\r\n                    autoComplete='off'\r\n                />\r\n                <Divider className={classes.bottomDivider}/>\r\n            </div>\r\n            <Button className={classes.submitButton} variant=\"outlined\" type='submit' disabled={!isNotSaved}>\r\n                Save\r\n            </Button>\r\n            </ValidatorForm>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Timing","import React,{useState} from 'react'\r\nimport MenuButton from './MenuButton'\r\nimport Audio from './Audio'\r\nimport Timing from './Timing'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport sizes from './sizes'\r\n\r\n\r\nconst useStyles = makeStyles({ \r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'flex-start',\r\n        alignItems: 'center',\r\n        height: '100%',\r\n        width: '100%',\r\n        color: '#f6f6f6',\r\n        maxWidth: '1000px',\r\n    },\r\n    title: {\r\n        margin: '0 0 2rem 0',\r\n        fontSize: '3rem',\r\n        fontWeight: '500',\r\n        [sizes.up('sm')] : {\r\n            alignSelf: 'center',\r\n            margin: '0 0 2rem 0',\r\n            fontSize: '5rem',\r\n        },\r\n    },\r\n    tabSpace: {\r\n        width: '70%',\r\n        [sizes.up('md')] : {\r\n            width: '55%'\r\n        },\r\n        [sizes.up('lg')] : {\r\n            width: '40%'\r\n        },\r\n    },\r\n    tabBar: {\r\n        // width: '50%',\r\n        '& .MuiTab-textColorPrimary':{\r\n            color: '#f6f6f6',\r\n            fontFamily: 'Roboto Condensed',\r\n            fontSize: '24px',\r\n            fontWeight: '300',\r\n            textTransfrom: 'none',\r\n        },\r\n\r\n        '.MuiTab-textColorPrimary.Mui-selected' : {\r\n            color: '#3f51b5',\r\n           \r\n        },\r\n        '& .MuiTabs-flexContainer': {\r\n        justifyContent: 'space-around'\r\n    }\r\n    },\r\n    topDivider: {\r\n        backgroundColor: 'black',\r\n        opacity: '1',\r\n        marginTop: '1rem',\r\n        height: '2px'\r\n    },\r\n    menuButton: {\r\n        width: '100%',\r\n        display: 'flex',\r\n        justifyContent: 'start'\r\n    }\r\n    \r\n})\r\n\r\n\r\n\r\nconst FAQ = props => {\r\n\r\n    const [tab, setTab] = useState(0);\r\n\r\n    const {saveOptions, options} = props;\r\n\r\n    const handleChange = (e, newTab) => {\r\n        setTab(newTab);\r\n      };\r\n\r\n   \r\n\r\n    const classes = useStyles(props)\r\n    \r\n\r\n    return(\r\n       \r\n        <div className={classes.root}>\r\n            <div className={classes.menuButton}> <MenuButton /></div>\r\n            <h1 className={classes.title}>OPTIONS</h1>\r\n           <div className={classes.tabSpace}>\r\n               <Tabs\r\n                    className={classes.tabBar}\r\n                    value={tab}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    onChange={handleChange}\r\n                    aria-label=\"FAQ Tabs\"\r\n               >\r\n                   <Tab label='Timing'/>\r\n                   <Tab label='Audio'/>\r\n               </Tabs>\r\n               <Divider className={classes.topDivider}/>\r\n            </div>\r\n            \r\n                {tab === 0? \r\n                <Timing \r\n                saveOptions={saveOptions} \r\n                options={options}\r\n                /> \r\n                : \r\n                <Audio \r\n                saveOptions={saveOptions} \r\n                options={options}\r\n                />\r\n                }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FAQ","import React from 'react';\nimport useLocalStorageState from './Hooks/UseLocalStorageState'\nimport { TasksProvider } from './contexts/task.context';\nimport { SessionProvider } from './contexts/session.context';\nimport WorkSpace from './WorkSpace'\nimport Div100vh from 'react-div-100vh'\nimport SideMenu from './SideMenu';\nimport FAQ from './FAQ'\nimport Options from './Options'\n\nimport {Route, Switch} from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core';\n\nimport './App.css';\n\n\nconst useStyles = makeStyles({\n  root: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n\n})\n\nfunction App() {\n  \n const classes = useStyles()\n\n const initialOptions = JSON.parse(window.localStorage.getItem('options')) || {\n    pomTime: 25,\n    breakTime: 5,\n    pomSound: 'timeWave',\n    breakSound: 'chime'\n};\n\n  const [options, setOptions] = useLocalStorageState('options', initialOptions);\n  \n  const saveOptions = (data) => {\n    const newOptions = {...options, ...data}\n    setOptions(newOptions)\n  }\n\n  return (\n    <div className={classes.root}>\n      <SessionProvider>\n          <SideMenu />\n          <Switch>\n              <Route exact path=\"/faq\">\n                  <FAQ />\n              </Route>\n              <Route exact path=\"/options\">\n                  <Options saveOptions={saveOptions} options={options}/>\n              </Route>\n              <Route path=\"/\">\n                <TasksProvider>\n                  <Div100vh>\n                    <WorkSpace options={options}/>\n                  </Div100vh>\n                </TasksProvider>\n              </Route>\n          </Switch>\n      </SessionProvider>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {GameStateProvider } from './contexts/gameState.context';\nimport Div100vh from 'react-div-100vh'\n\n\nReactDOM.render(\n\n    <BrowserRouter>\n        <GameStateProvider>\n            <Div100vh>\n                <App /> \n            </Div100vh>\n        </GameStateProvider>\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/tomato.376b1506.svg\";"],"sourceRoot":""}